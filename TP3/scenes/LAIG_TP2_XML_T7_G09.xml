<lsf>

    <initials>
      <reference length="2" />
      <!-- axis length; "0" means no axis displayed -->
      <root id="root" />
      <!-- identifier of root node of the scene graph; this node -->
      <!-- must be defined in one of the following NODE declarations -->
    </initials>

    <views default="middle_camera">

      <!-- at least one of the following type of cameras must be declared -->

      <perspective id="middle_camera" near="0.1" far="500" angle="45">

        <from x="5.7" y="3" z="-2" />

        <to x="2" y="0" z="-2" />

      </perspective>

      <perspective id="white_player_camera" near="0.1" far="500" angle="45">

        <from x="2" y="5" z="2" />

        <to x="2" y="0" z="-2" />

      </perspective>

      <perspective id="black_player_camera" near="0.1" far="500" angle="45">

        <from x="2" y="5" z="-6" />

        <to x="2" y="0" z="-2" />

      </perspective>


    </views>


    <illumination>
      <ambient r="0.2" g="0.2" b="0.2" a="1.0" /> <!-- global ambient -->
      <background r="0.55" g="0.17" b="0.1" a="1.0" /> <!-- background color -->
    </illumination>


    <lights>
      <!-- NOTE: this block "light" must be repeated as necessary with different "id". At least one light should be present, and a maximum of eight lights is accepted. -->


    <light id="west_light">            <!-- light identifier -->
      <enable value="1" />
      <!-- enable/disable -->
      <position x="7" y="5" z="-2" w="1.0" /><!-- light position; w=1: point light; w=0: directional light -->
      <ambient r="0" g="0" b="0" a="1.0" />                   <!-- ambient component -->
      <diffuse r="1.0" g="1.0" b="1.0" a="1.0" />             <!-- diffuse component -->
      <specular r="1.0" g="1.0" b="1.0" a="1.0" />            <!-- specular component -->
  </light>

  <light id="east_light">            <!-- light identifier -->
    <enable value="1" />
    <!-- enable/disable -->
    <position x="-5" y="5" z="-2" w="1.0" /><!-- light position; w=1: point light; w=0: directional light -->
    <ambient r="0" g="0" b="0" a="1.0" />                   <!-- ambient component -->
    <diffuse r="1.0" g="1.0" b="1.0" a="1.0" />             <!-- diffuse component -->
    <specular r="1.0" g="1.0" b="1.0" a="1.0" />            <!-- specular component -->
</light>

    </lights>


    <textures>
      
      <texture id="white_texture" path="./scenes/images/black.png" />
      <texture id="black_texture" path="./scenes/images/white.jpeg" /> 
    </textures>

    <spritesheets>
      <spritesheet id="fire" path="./scenes/images/fire.png" sizeM="5" sizeN="2" />

   </spritesheets>




    <materials>
      <!-- NOTE: the "MATERIAL" block may be repeated as required. Each defined material

          requires a distinct "id". At least one material should be present. -->
  
      <material id="not_shiny_material">
        <shininess value="0.2" />
        <ambient r="0.2" g="0.2" b="0.2" a="1.0" />
        <diffuse r="0.6" g="0.6" b="0.6" a="1.0" />
        <specular r="0.6" g="0.6" b="0.6" a="1.0" />
        <emissive r="0.0" g="0.0" b="0.0" a="1.0" />
      </material>

    </materials>


<animations>
  
  
</animations>

    <nodes>

      <node id="root">
        <!-- defines one intermediate node; may be repeated as necessary -->

        <!-- next two lines are mandatory -->
        <material id="not_shiny_material" />
        <!-- this superimposes the material received from parent node id="null" maintains material from parent node -->


        <texture id="clear">
          <!-- declared texture superimposes the texture received from parent node
            id="null" maintains texture from parent node
            id="clear" clears texture declaration received from parent node -->


          <amplification afs="1.0" aft="1.0" /> <!-- for primitives = dx/afs, dy/aft -->

        </texture>

        <transformations>
        </transformations>

        <!-- geom. transf. are optional and may be repeated, in any order, as necessary: -->

        <!-- declaring descendants, at least one node or one leaf must be present
        descendants may be mixed, nodes and leafs -->
        <descendants>
          <noderef id="main_board"/>
          <noderef id="white_side_eval"/>
          <noderef id="black_side_eval"/>
        </descendants>

      </node>

    <node id="main_board">
        <material id="not_shiny_material" />

        <texture id="black_texture">
          <amplification afs="0.5" aft="0.5" />
        </texture>

        <transformations>
          
        </transformations>
        <descendants>
          <leaf type="gameboard" x1="-2" y1="-2" x2="2" y2="2"/>
        </descendants>
      </node>

    <node id="white_side_eval">
      <material id="not_shiny_material" />

      <texture id="black_texture">
        <amplification afs="0.5" aft="0.5" />
      </texture>

      <transformations>
        <translation x="-1.8" y="0" z="-4" />
  
        
        <rotation axis="y" angle="25" />
        <rotation axis="z" angle="0" />
    
        <scale sx="1" sy="1" sz="1" />
  
      </transformations>
      <descendants>
        <leaf type="eval_board"/>
      </descendants>
    </node>

    <node id="black_side_eval">
      <material id="not_shiny_material" />

      <texture id="black_texture">
        <amplification afs="0.5" aft="0.5" />
      </texture>

      <transformations>
        
        <translation x="1.3" y="0" z="1.5" />
        
         
        <rotation axis="y" angle="335" />
        <rotation axis="z" angle="0" />
        
        <scale sx="-1" sy="1" sz="-1" />
  
      </transformations>
      <descendants>
        <leaf type="eval_board"/>
      </descendants>
    </node>

    </nodes>

</lsf>
